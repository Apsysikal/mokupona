datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id    String @id @default(cuid())
  email String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  password Password?

  notes  Note[]
  events Event[]

  Role   Role   @relation(fields: [roleId], references: [id], onDelete: Restrict, onUpdate: Cascade)
  roleId String
}

model Role {
  id          String @id @default(cuid())
  // user, moderator, admin
  name        String @unique
  description String @default("")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  users User[]
}

model Password {
  hash String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model Note {
  id    String @id @default(cuid())
  title String
  body  String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String
}

model Event {
  id          String   @id @default(cuid())
  title       String
  description String
  date        DateTime
  slots       Int
  price       Decimal
  cover       String

  image   EventImage @relation(fields: [imageId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  imageId String     @unique @default("")

  addressId String
  address   Address @relation(fields: [addressId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  EventResponse EventResponse[]

  createdBy   User   @relation(fields: [createdById], references: [id], onDelete: Cascade, onUpdate: Cascade)
  createdById String
}

model EventResponse {
  id    String @id @default(cuid())
  name  String
  email String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  event   Event  @relation(fields: [eventId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  eventId String

  @@unique([email, eventId])
}

model Address {
  id          String  @id @default(cuid())
  streetName  String
  houseNumber String
  zip         String
  city        String
  Event       Event[]

  @@unique([streetName, houseNumber, zip, city])
}

model EventImage {
  id          String  @id @default(cuid())
  altText     String?
  contentType String
  blob        Bytes

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  event Event?
}
